<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:conf/jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="baseTxProxy" lazy-init="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis_config.xml"/>
		<property name="mapperLocations" value="classpath:conf/mapper/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.rlglsys.entity" />
	</bean>
	
	<!-- 事务控制的业务方法配 -->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>		
			<tx:method name="get*" read-only="true" />
			<tx:method name="delete*"   rollback-for="Exception"/>
			<tx:method name="update*"  rollback-for="Exception"/>
			<tx:method name="insert*"  rollback-for="Exception"/>
			<tx:method name="save*"  rollback-for="Exception"/>
			<tx:method name="*"  rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<!--pointcut元素定义一个切入点，execution中的第一个星号 用以匹配方法的返回类型，这里星号表明匹配所有返回类型。 com.rlglsys.service.*.*(..)表明匹配com.rlglsys.service包下的所有类的所有 
		方法 -->
    <aop:config>
		<aop:advisor
			pointcut="execution(* com.rlglsys.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
</beans>